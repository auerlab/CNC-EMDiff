
Sequencing was performed on an Illumina TrueSeq using 150 nt reads

Sequence data processing was performed on a FreeBSD 12.1 HPC cluster running
the SLURM workload manager.

Differential analysis was performed on a FreeBSD 12.1 workstation using
DESeq2 1.28.1 under R 4.0.1.

All pipeline scripts were written in POSIX Bourne shell for maximum
portability and simplicity.  The scripts are heavily commented to document
the purpose of each command and any special parameters.

The pipeline is available at https://github.com/auerlab/CNC-EMDiff.
(Currently private, but will make public soon)

This pipeline was developed by Jason W. Bacon with assistance from
Paul L. Auer on the DESeq2 R script, which was based on the work of
Andrea Rau for Sumona Dhara's Optic Regen project.

    https://github.com/andreamrau/OpticRegen_2019

===

Trimming was performed using cutadapt 2.7 under Python 3.6 with the following
parameters:
    -u -3 -U -3
	Trim last 3 bases from each read
    -u +15 -U +15
	Trim first 15 bases from each read
	This was done because of a strong unexplained bias at 5' end
    -a CTGTCTCTTATACACATCT -A CTGTCTCTTATACACATCT
	Adapters were trimmed from the ends by the sequencing center, but
	some 3' adapter contamination remained in reads < the 150 nt used
	in the sequencing run
    --minimum-length=20
	Discard reads with fewer than 20 bases after trimming
	This is fairly standard and in this case eliminated a small
	percentage of total reads

===

Quality was checked using fastqc 0.11.8 with no special parameters.
Combined reports were generated using multiqc 1.8.

===

Alignments were performed using BWA 0.7.17.
The reference genome was generated by concatenating the autosomal files
Mus_musculus.GRCm38.dna.chromosome.1.fa.gz through
Mus_musculus.GRCm38.dna.chromosome.19.fa.gz from
ftp://ftp.ensembl.org/pub/release-98/fasta/mus_musculus/dna

BWA commands used:

bwa index Mus_musculus.GRCm38.dna.autosomes.fa
bwa mem -M reference file-R1.fastq file-R2.fastq > outfile.sam
    -M flag shorter split hits as secondary for tools that do not support
    split alignments
    R1 and R2 represent separate paired-end reads

===

SAM output files from BWA were quality checked with fastqc and multiqc with
no special parameters and combined reports again generated using multiqc.

===

Duplicates were removed using samtools 1.9 with the following sequence
    1. Sort by qname for fixmate (samtools sort -n)
    2. Add mate score tags (samtools fixmate -m)
    3. Re-sort by coordinate (samtools sort)
    4. Remove duplicates with expected read length 100
	(samtools markdup -l 100 -r -s)
    5. Remove reads with MAPQ < 1 (samtools view -q 1)

===

BAM files for replicate samples from the same cell line (chondro or neuro)
and time point were merged for viewing using samtools 1.9

E.g.

samtools merge atac-chondrocyte-1.bam CCA1*.bam
samtools merge atac-chondrocyte-2.bam CCA2*.bam
...

===

The IGV genome browser was used for visual examination of peaks

===

Peaks were called using MACS2 2.2.7

    macs2 callpeak -t input -f BAMPE -g mm
    
    -f BAMPE        Use paired-end peak calling algorithm
    -g mm           Use known mouse genome size
    --call-summits  Generate peak summits in output
    --keep-dup all  Keep duplicate tags at same location

===

Summits generated by MACS were then processed using awk and bedtools 2.29
to generate 501-nt peaklets.  Bedtools command requires chromosome sizes,
which were extracted from:

ftp://ftp.ensembl.org/pub/release-98/gff3/mus_musculus/Mus_musculus.GRCm38.98.chr.gff3.gz

    bedtools slop -b 250 -g chromosome-sizes

Overlapping peaklets were then merged using bedtools merge

===

Differential peaks were identified using DiffBind 2.16.0 and DESeq2 1.28.1
under R 4.0.1.

Below are the major functions used from the DiffBing and DESeq2 libraries:

DiffBind's dba.count() was used to identify reads overlapping the peaklets.
DESeq()

DESeq2's results() function generated differential analysis for each time
intervale T0 vs T1, T1 vs T2, and T0 vs T2

DESeq2's summary() function provided a human-readable summary in TSV format
