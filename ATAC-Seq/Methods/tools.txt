
Sequence data processing was performed on a FreeBSD 12.1 HPC cluster running
the SLURM workload manager.

Differential analysis was performed on a FreeBSD 12.1 workstation using
DESeq2 1.28.1 under R 4.0.1.

The pipeline is available at https://github.com/auerlab/CNC-EMDiff.

Trimming was performed using cutadapt 2.7 under Python 3.6 with the following
parameters:
    -u -3 -U -3
	Trim last 3 bases from each read
    -u +15 -U +15
	Trim first 15 bases from each read
	We noticed a strong unexplained bias in these early reads
    -a CTGTCTCTTATACACATCT -A CTGTCTCTTATACACATCT
	Adapters were trimmed by the sequencing center, but some trailing
	adapter contamination remained in short reads
    --minimum-length=20
	Discard reads with fewer than 20 bases after trimming

Quality was checked using fastqc 0.11.8 with no special parameters.
Combined reports were generated using multiqc 1.8.

Alignments were performed using bwa 0.7.17.
The reference genome was generated by concatenating the autosomal files
Mus_musculus.GRCm38.dna.chromosome.1.fa.gz through
Mus_musculus.GRCm38.dna.chromosome.19.fa.gz from
ftp://ftp.ensembl.org/pub/release-$release/fasta/mus_musculus/dna

bwa index Mus_musculus.GRCm38.dna.autosomes.fa
srun bwa mem -M reference file-R1.fastq file-R2.fastq > outfile.sam
    -M flag shorter split hits as secondary for tools that do not support
    split alignments
    R1 and R2 represent separate paired-end reads

SAM files were quality checked with fastqc and multiqc with no special
parameters.

Duplicates were removed using samtools 1.9 with the following sequence
    1. Sort by qname for fixmate (samtools sort -n)
    2. Add mate score tags (samtools fixmate -m)
    3. Re-sort by coordinate (samtools sort)
    4. Remove duplicates with expected read length 100
	(samtools markdup -l 100 -r -s)
    5. Remove reads with MAPQ < 1 (samtools view -q 1)

BAM replicates were merged for viewing using

IGV was used for visual examination of peaks

Peaks were called using MACS2 
    macs2 callpeak -t input -f BAMPE -g mm
    
    -f BAMPE        Use paired-end peak calling algorithm
    -g mm           Use known mouse genome size
    --call-summits  Generate peak summits in output
    --keep-dup all  Keep duplicate tags at same location
    
Summits generated by MACS were then processed using awk and bedtools slop
to generate 501-bg peaklets, using chromosome sizes extracted from
ftp://ftp.ensembl.org/pub/release-98/gff3/mus_musculus/Mus_musculus.GRCm38.98.chr.gff3.gz
    bedtools slop -b 250 -g chromosome-sizes
Overlapping peaklets were merged using bedtools merge

Differential peaks were identified using DiffBind 2.16.0 and DESeq2 1.28.1
under R 4.0.1.
DiffBind's dba.count() was used to identify reads overlapping the peaklets.
DESeq()
results()   Generate differential analysis for each time intervale
	    T0 vs T1, T1 vs T2, and T0 vs T2
summary()   alpha=0.05
