#!/bin/sh -e

##########################################################################
#   Script description:
#       Filter out duplicate reads
#       This script is I/O-intensive, so use slow nodes and limit
#       concurrency.
#
#       FIXME: Explore using Picard MarkDuplicates for this instead
##########################################################################

##########################################################################
#   Main
##########################################################################

#lpjs jobs 18
#lpjs procs-per-job 1
#lpjs min-procs-per-node procs-per-job
#lpjs pmem-per-proc 3GB
#lpjs log-dir Logs/10-remove-duplicates

##############################################################################
# Update PATH on a chimeric cluster (multiple operating systems used for
# compute nodes.
#
# The path used by the package manager that installed LPJS is added
# automatically (/usr/local for FreeBSD ports, usually /usr/pkg or /opt/pkg
# for pkgsrc).
#
# Add the default non-priveleged pkgsrc prefix used by auto-pkgsrc-setup.
##############################################################################

# Not every sh implementation can combine the two commands below
PATH=$LPJS_HOME_DIR/Pkgsrc/pkg:$path
export PATH

# Set a default value for testing outside the LPJS environment
: ${LPJS_ARRAY_INDEX:=1}

# Document software versions used for publication
uname -a
hostname
pwd
samtools --version
printenv

##############################################################################
# If this node cannot access the input files using NFS, pull them from
# the submit node.  If all nodes use NFS, this can be removed.  Out macOS
# node currently does not use NFS due to issues with Apple's full disk
# access security feature.
##############################################################################

input_dir='Results/09-bwa-mem'
output_dir='Results/10-remove-duplicates'

marker=lpjs-$LPJS_SUBMIT_HOST-shared-fs-marker
if [ ! -e $marker ]; then
    printf "$marker does not exist.  Using rsync to transfer files.\n"
    
    # Recreate directory structure in temp working dir and pull
    # our input files into it
    mkdir -p $input_dir $output_dir
    # Example: chondro-sample1-rep1-time1.sam
    saminput="$input_dir/*sample$LPJS_ARRAY_INDEX-*"
    set -x
    rsync --copy-links ${LPJS_SUBMIT_HOST}:$LPJS_SUBMIT_DIRECTORY/$saminput $input_dir
    set +x
else
    printf "$marker found.  No need to transfer files.\n"
    saminput=$(ls $input_dir/*sample$LPJS_ARRAY_INDEX-*)
fi

# FIXME: Remove duplicate reads before alignment to cut down on redundant
# alignments.  Still need to run this step since we cannot identify all
# duplicate alignments before alignment.

cd Results/10-remove-duplicates

# This should match only 1 file.  '*' used only to match irrelevant variations.
# The integer following 'S' in the filename should be unique (1 - 18)
# Variable assignments don't expand globbing patterns, so insert an ls command
saminput=$(ls ../09-bwa-mem/*sample$LPJS_ARRAY_INDEX-*.sam)
sambase=$(basename $saminput)
sorted=${sambase%.sam}-sorted.bam
nodup=${sambase%.sam}-nodup.bam
nodupmapq1=${sambase%.sam}-nodup-mapq1.bam
printf "saminput=$saminput, sorted=$sorted, nodup=$nodup, nodupmapq1=$nodupmapq1\n"

# Clean up from prior interrupted sort processes
rm -f $sorted-*tmp*

# Is there a reason to sort by coordinates before sorting by name?
# Sort by leftmost coordinate
# samtools sort $saminput -o $sorted
# samtools index $sorted
# Are these even used?
# samtools idxstats $sorted > $sorted.idxstats
# samtools flagstat $sorted > $sorted.flagstat

set -x

# fixmate requires name-sorted input
# Apparently must be in a file, so we can't pipe sorted input to it?
# samtools sort -n -o $sorted-namesort.bam $sorted 
# -n: Sort by QNAME
# -m: Specify max memory use.  More mem means fewer temp files
samtools sort -n -m 2g -o $sorted-namesort.bam $saminput
rm -f $sorted $sorted.*

# -m: Add mate score tags to help markdup select the best reads to keep
samtools fixmate -m $sorted-namesort.bam $sorted-fixmate.bam
# Keep name-sorted file for further filtering
# rm -f $sorted-namesort.bam

# markdup requires coordinate-sorted input
# -m: Specify max memory use.  More mem means fewer temp files
samtools sort -m 2g -o $sorted-fixmate-sort.bam $sorted-fixmate.bam
rm -f $sorted-fixmate.bam

# Remove duplicate reads with markdup
# -l: Expected read length
# -r: Remove duplicates
# -s: Print basic stats
samtools markdup -l 100 -r -s $sorted-fixmate-sort.bam $nodup
rm -f $sorted-fixmate-sort.bam

# Generating index and stats
# Are these used?
samtools index $nodup
samtools idxstats $nodup > $nodup.idxstats
samtools flagstat $nodup > $nodup.flagstat

# Remove reads with MAPQ < 1
# Default quality min (-q) is 0
# -b: Output BAM format
# -q: Minimum MAPQ value
samtools view -b -q 1 $nodup > $nodupmapq1
rm -f $nodup $nodup.*

# Generating index and stats
samtools index $nodupmapq1
samtools idxstats $nodupmapq1 > $nodupmapq1.idxstats
samtools flagstat $nodupmapq1 > $nodupmapq1.flagstat

# Don't waste time and bandwidth sending back input files
if [ ! -e $marker ]; then
    rm -rf $input_dir
fi
