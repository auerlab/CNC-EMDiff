#!/bin/sh -e

##########################################################################
#   Script description:
#       Align reads to reference genome
#
#   Usage:
#       LPJS cluster:
#           lpjs submit 09-bwa-mem.lpjs
##########################################################################

##########################################################################
#   Main
##########################################################################

#lpjs jobs 18
#lpjs procs-per-job 4
#lpjs min-procs-per-node procs-per-job
#lpjs pmem-per-proc 6GB
#lpjs log-dir Logs/09-bwa-mem

# Set a default value for testing outside the LPJS environment
: ${LPJS_ARRAY_INDEX:=1}
: ${LPJS_PROCS_PER_JOB:=4}

# Document software versions used for publication
uname -a
bwa || true
pwd

ref_file=$(Reference/genome-filename.sh)

# One iteration if running under LPJS, all iterations otherwise
cd Results/09-bwa-mem
printf "Running task $LPJS_ARRAY_INDEX...\n"
infile1=$(ls ../04-trim/*sample$LPJS_ARRAY_INDEX-*-R1.fastq.zst)
infile2=$(ls ../04-trim/*sample$LPJS_ARRAY_INDEX-*-R2.fastq.zst)
outfile=$(basename ${infile1%-R1.fastq.gz}).sam

set -x
rm -f pipe1 pipe2
mkfifo pipe1
mkfifo pipe2
zstdcat $infile1 > pipe1 &
zstdcat $infile2 > pipe2 &
bwa mem -M -t $LPJS_PROCS_PER_JOB \
    ../08-bwa-index/$ref_file pipe1 pipe2 > $outfile
wait
