#!/bin/sh -e

##########################################################################
#   Script description:
#       Locate ATAC-Seq peaks within 100kb of DE gene TSS for each
#       gene cluster.
#       Proximal peaks are defined as within 1kb
#       Distal peaks are defined as within 100kb
#       
#   History:
#   Date        Name        Modification
#   2020-06-12  Jason Bacon Begin
##########################################################################

usage()
{
    printf "Usage: $0\n"
    exit 1
}


##########################################################################
#   Function description:
#       Print a header to an output file
#       
#   History:
#   Date        Name        Modification
#   2020-07-03  Jason Bacon Begin
##########################################################################

header()
{
    printf "Chr\tStart\tEnd\tName\tDA\tLFC\tAPV\n"
    return 0
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

bedtools --version > bedtools-version.txt
bed_sort="sort -k1,1 -k2,2n"

##########################################################################
#   Extract gene locations from Ensembl GTF.  They are also in the CDNA
#   reference, but CDNA does not document features like exons, UTRs, etc.
#   Ensembl GTF has many more gene IDs represented than CDNA reference
#   and CDNA contains a small number of gene IDs not in the GTF.
#   all-but-xy.transcripts.clean.fa is generated from either GTF or CDNA
#   Last run used CDNA, so there will be some gene IDs in the clusters
#   not found in the GTF.  Other parts of this analysis will need to look
#   at exons, so use GTF here for consistency.
##########################################################################

rna_ref_dir="../../RNA-Seq/Reference"
ref_release=$($rna_ref_dir/reference-release)
gtf="$rna_ref_dir/Mus_musculus.GRCm38.$ref_release.gtf"

gene_locations=gene-locations-$ref_release.tsv
printf "Generating $gene_locations...\n"
# Output format: chr start stop gene-ID
# Sort by gene ID for awk script that follows
awk '$1 >= 1 && $1 <= 19 && $3 == "gene" && $9 == "gene_id" {
    # Strip quotes and ; from gene ID
    gsub("\"", "", $10);
    gsub(";", "", $10);
    printf("%u\t%u\t%u\t%s\n", $1, $4, $5, $10);
}' $gtf | sort -k 4 > $gene_locations
wc -l $gene_locations
head -5 $gene_locations

##########################################################################
#   Get gene IDs from RNA-Seq clustering results (provided by Maria)
#   Clustering performed by Paul Auer
##########################################################################

mkdir -p Results
for cell_type in CCA NCA; do
    
    # Col 16 of augmented Sleuth output contains cluster # for each gene
    # List of unique values in this column enumerates clusters
    tsv="../../RNA-Seq/Clusters/$cell_type.tsv"
    clusters=$(awk '$1 != "target_id" { print $16 }' $tsv | sort | uniq)
    
    for cluster in $clusters; do
	printf "=== $cell_type, cluster $cluster ===\n"
	cluster_gene_list=genes-$cell_type-c$cluster.txt
	awk "\$16 == $cluster { print \$2 }" $tsv | sort | uniq \
	    > $cluster_gene_list
	
	# Generate BED file of genes and locations
	cluster_gene_locations=${cluster_gene_list%.txt}.bed
	awk -v gene_locations=$gene_locations -f lookup-gene-locations.awk \
	    $cluster_gene_list > $cluster_gene_locations

	# Generate BED file with gene TSS position +/-100kb
	cluster_gene_100kb=${cluster_gene_locations%.bed}-100kb.bed
	# Filter out gene IDs not found in GTF (tagged with -1 by
	# lookup-gene-locations.awk) and replace end with start since we're
	# measuring distance from TSS in either direction.
	awk '$1 != -1 { printf("%s\t%s\t%s\t%s\n", $1, $2, $2+1, $4); }' \
	    $cluster_gene_locations > temp.bed
	bedtools slop \
	    -b 100000 \
	    -g $rna_ref_dir/chromosome-sizes.tsv \
	    -i temp.bed \
	    | $bed_sort > $cluster_gene_100kb
	wc -l $cluster_gene_100kb
	
	#####################################################################
	#   Find all peaks (both differential and stable accessibility)
	#   within 100kb of DE gene TSS by cluster
	#####################################################################
	
	printf "Finding proximal and distal peaks (<= 100kb from TSS)...\n"
	
	# Generate matching BED file from DESeq2 output
	for interval in "T1-vs-T0" "T2-vs-T0" "T2-vs-T1"; do
	    peaks_file=peaks-$cell_type-c$cluster-$interval.tsv
	    # DESeq2 annoyingly decides to use scientific notation for
	    # boundaries sometimes, so convert boundaries to plain integers
	    # while massaging to BED format.
	    awk '$1 !~ "baseMean" { \
		    name=$1; \
		    lfc=$3;
		    apv=$7; \
		    gsub("\"", "", name); \
		    split(name, a, "-"); \
		    gsub("chr", "", a[1]);
		    if ( apv < 0.05 ) {
			if ( lfc >= 0 ) {
			    da="up";
			}
			else {
			    da="down";
			}
		    } else {
			da="stable";
		    }
		    printf("%u\t%u\t%u\t%s\t%s\t%f\t%f\n",
			   a[1], a[2], a[3], name, da, lfc, apv); \
		}' \
	    ../../ATAC-Seq/10-diff-anal/$cell_type-$interval.tsv \
	    | $bed_sort >> $peaks_file
	    wc -l $peaks_file

	    # Find peaks within intersecting TSS+/-100kb
	    pd_peaks_file=Results/${cluster_gene_locations%.bed}-proximal+distal-peaks.tsv
	    header > $pd_peaks_file
	    bedtools intersect -sorted -wa -a $peaks_file \
		-b $cluster_gene_100kb | $bed_sort | uniq >> $pd_peaks_file
	    wc -l $pd_peaks_file
	    
	    wide_peaks_file=${pd_peaks_file%.bed}-over750.tsv
	    header > $wide_peaks_file
	    awk '$3 - $2 > 750 { print $0 }' $pd_peaks_file \
		>> $wide_peaks_file

	    #####################################################################
	    #   Generate fasta file for each set of proximal+distal peaks
	    #   seqkit rmdup should be useless here since we did sort|uniq
	    #   above, but include it as a redundant check.
	    #####################################################################
	    
	    printf "Generating fasta...\n"
	    fasta_file=Results/${peaks_file%.bed}.fasta
	    atac_ref_dir=../../ATAC-Seq/Reference
	    genome_fasta=$atac_ref_dir/Mus_musculus.GRCm38.dna.autosomes.fa
	    bedtools getfasta -fi $genome_fasta -bed $pd_peaks_file \
		| seqkit rmdup > $fasta_file
	    wc -l $fasta_file
	done
    done
done
